VIDGUI Install Guide for Ubuntu 12.04 - v.1.6 
by Santiago Cortijo (scortijoa@gmail.com)
November 13, 2012.

########################################################################
#############Step 0:  Install dependencies##############################
########################################################################

0.1.  Remove following existing packages (just copy&paste in terminal):

==================================================================
sudo apt-get remove ffmpeg x264 libav-tools libvpx-dev libx264-dev \
 libavutil-dev   libavcodec-dev    libavformat-dev   libavdevice-dev    libavfilter-dev     libswscale-dev   libpostproc-dev 
==================================================================
	
0.2.  Get dependencies (just copy&paste in terminal):

========================================================================================================
sudo apt-get update
sudo apt-get -y install autoconf build-essential checkinstall git mercurial libfaac-dev libgpac-dev \
  libjack-jackd2-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev \
  librtmp-dev libsdl1.2-dev libtheora-dev libtool libva-dev libvdpau-dev libvorbis-dev qtcreator \
  libx11-dev libxfixes-dev pkg-config texi2html yasm zlib1g-dev libasound2-dev libv4l-dev libssl-dev qtmobility-dev libdeclarative-multimedia qtmobility-dev qt-sdk  libavformat53 libavcodec53 libswscale2 libavutil-extra-51
========================================================================================================

0.3. Download, compile and Instal x264 (just copy&paste in terminal):

========================================================================================================
cd
git clone --depth 1 git://git.videolan.org/x264
cd x264
./configure --enable-static --enable-shared
make
sudo checkinstall --pkgname=x264 --pkgversion="3:$(./version.sh | \
  awk -F'[" ]' '/POINT/{print $4"+git"$5}')" --backup=no --deldoc=yes \
  --fstrans=no --default
==========================================================================================================

0.4. Download, compile and Instal fdk-aac (just copy&paste in terminal):

==========================================================================================================
cd
git clone --depth 1 git://github.com/mstorsjo/fdk-aac.git
cd fdk-aac
autoreconf -fiv
##./configure --disable-shared
./configure --enable-shared
make
sudo checkinstall --pkgname=fdk-aac --pkgversion="$(date +%Y%m%d%H%M)-git" --backup=no \
  --deldoc=yes --fstrans=no --default
=========================================================================================================

0.5. Download, compile and Instal libvpx (just copy&paste in terminal):

=========================================================================================================
cd
git clone --depth 1 http://git.chromium.org/webm/libvpx.git
cd libvpx
./configure
make
sudo checkinstall --pkgname=libvpx --pkgversion="1:$(date +%Y%m%d%H%M)-git" --backup=no \
  --deldoc=yes --fstrans=no --default
==========================================================================================================

0.6. Download, compile and Instal ffmpeg (just copy&paste in terminal):

==========================================================================================================
cd
git clone --depth 1 git://source.ffmpeg.org/ffmpeg
cd ffmpeg
./configure --enable-gpl --enable-nonfree --enable-pthreads --enable-libfaac --enable-libfdk-aac --enable-libmp3lame \
  --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-librtmp --enable-libtheora \
  --enable-libvorbis --enable-x11grab --enable-libx264  --enable-version3 --enable-shared --disable-static --enable-memalign-hack
make 
sudo checkinstall --pkgname=ffmpeg --pkgversion="5:$(date +%Y%m%d%H%M)-git" --backup=no \
  --deldoc=yes --fstrans=no --default
hash x264 ffmpeg ffplay ffprobe
=========================================================================================================

0.7. Download, compile and Install SDL-1.3 (just copy&paste in terminal):

=========================================================================================================
cd
hg clone http://hg.libsdl.org/SDL sdl-1.3
mkdir sdl-1.3-build
cp -R -f sdl-1.3/ sdl-1.3-build/
cd sdl-1.3-build/sdl-1.3
rm -R -f .hg
./configure
make
sudo make install
==========================================================================================================

##########################################################################
##################Step 1: Install Pjproject 2.0.1#########################
##########################################################################


1.0. Download project-2.0.1.

	Download link: http://www.pjsip.org/release/2.0.1/pjproject-2.0.1.tar.bz2
	MD5SUM: http://www.pjsip.org/release/2.0.1/MD5SUM.TXT

Just copy&paste in terminal
==================================================================
cd
wget http://www.pjsip.org/release/2.0.1/pjproject-2.0.1.tar.bz2
tar xvjf pjproject-2.0.1.tar.bz2
====================================================================


1.1. Edit file "pjproject-2.0.1/pjlib/include/pj/config_site.h", you must add there (if it's not yet) :

	#define PJMEDIA_HAS_VIDEO 1


1.2. Proceed with normal installing process:
	In terminal, go to project-2.0.1 folder and intruduce following commands:
=======================================================================
cd
cd pjproject-2.0.1
./configure
make dep
make 
sudo make install
========================================================================
If all dependencies were satisfied, that should not cause any trouble.

#########################################################################
#################Step 2: Compiling "Vidgui"##############################
#########################################################################

2.0. RECOMMENDED: Go to folder "pjproject-2.0.1/pjsip-apps/src/vidgui", and backup it (put backup at same level of original folder)

2.2. Open file "vidgui.cpp" in the vidgui folder, and modify settings with cryteria :

	///////////////////////////////////////////////////////////////////////////
	//
	// SETTINGS
	//

	//
	// These configure SIP registration
	//
	#define USE_REGISTRATION	1
	#define SIP_DOMAIN		"190.187.84.221"
	#define SIP_USERNAME		"156"
	#define SIP_PASSWORD		"pwd156"
	//#define SIP_PORT		5080
	#define SIP_PORT		5060
	#define SIP_TCP			0

	//
	// NAT helper settings
	//
	#define USE_ICE			1
	#define USE_STUN		0
	#define STUN_SRV		"stun.pjsip.org"

	//
	// Devices settings
	//
	#define DEFAULT_CAP_DEV		PJMEDIA_VID_DEFAULT_CAPTURE_DEV
	//#define DEFAULT_CAP_DEV		1
	#define DEFAULT_REND_DEV	PJMEDIA_VID_DEFAULT_RENDER_DEV


	//
	// End of Settings
	///////////////////////////////////////////////////////////////////////////

2.3. In same file, "vidgui.cpp", 
	Errase this sentence:
		acc_cfg.cred_info[0].realm = pj_str((char*)"*");
	and add this one instead:
    		acc_cfg.cred_info[0].realm = pj_str((char*)"asterisk");
	(about line 560 in vidgui.cpp)

2.4. Run in terminal:

===================================================
cd 
cd pjproject-2.0.1/pjsip-apps/src/vidgui
qmake
make
===================================================

2.5. If no compilation errors, ensure you have connected a camera, run the program:
=============================================	
cd 
cd pjproject-2.0.1/pjsip-apps/src/vidgui
./vidgui
=============================================


2.6. (Optional) Compiling in QT-CREATOR

for 32-bits Ubuntu, add in vidgui.pro file:
	LIBS += /usr/lib/i386-linux-gnu/libX11.so.6

for 64-bits Ubuntu, add in the vidgui.pro file:
	LIBS += /usr/lib/x86_64-linux-gnu/libX11.so.6

Then you should be able to make, run and debug the project from QT-Creator

#################################
#########References##############
#################################

1.	http://trac.pjsip.org/repos/wiki/Video_Users_Guide
2.	http://ffmpeg.org/trac/ffmpeg/wiki/UbuntuCompilationGuide
3.	Miguel Bello's Assistance 
4.	http://ubuntuforums.org/showthread.php?t=786095&page=53
	
